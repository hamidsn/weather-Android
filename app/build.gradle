plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.example.open.weather'
    compileSdk 34

    testOptions {
        packagingOptions {
            jniLibs {
                useLegacyPackaging true
            }
        }
    }

    defaultConfig {
        applicationId "com.example.open.weather"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            crunchPngs false
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"https://api.openweathermap.org/\""
            buildConfigField "String", "APP_ID", "\"9ea4a468aaf00610b9a6a5bb69569459\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            crunchPngs false
            minifyEnabled false
            buildConfigField "String", "BASE_URL", "\"https://api.openweathermap.org/\""
            buildConfigField "String", "APP_ID", "\"9ea4a468aaf00610b9a6a5bb69569459\""
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        buildConfig = true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
/*    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main']
        }

        test {
    useJUnitPlatform()
}
    }*/
}

dependencies {

    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_ktx"
    implementation "androidx.activity:activity-compose:$activity_compose"
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    // Compose dependencies
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodel_compose"
    implementation "androidx.navigation:navigation-compose:$navigation_compose"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpInterceptorVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpInterceptorVersion"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_android"
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'androidx.test.ext:junit-ktx:1.1.5'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_android"
    kapt "androidx.hilt:hilt-compiler:$hilt_compiler"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation "androidx.hilt:hilt-work:1.0.0"
    kapt("androidx.hilt:hilt-compiler:1.0.0")

    //Room
    implementation "androidx.room:room-runtime:2.5.2"
    kapt "androidx.room:room-compiler:2.5.2"
    implementation "androidx.room:room-ktx:2.5.2"

    // Permissions
    implementation 'com.google.accompanist:accompanist-permissions:0.23.1'

    // Needed if targeting API > 31 (Android 12+)
    implementation 'androidx.work:work-runtime-ktx:2.8.1'

    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    androidTestImplementation "io.mockk:mockk-android:1.12.3"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidXJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_android"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_android"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    androidTestImplementation 'androidx.test:core:1.2.0'
}